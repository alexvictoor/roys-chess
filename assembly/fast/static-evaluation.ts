import { BitBoard, BLACK, MaskIterator, PLAYER_PIECES } from "./bitboard";

const WHITE_PAWN_WEIGHTS: i32[] = [
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  5,
  10,
  10,
  -20,
  -20,
  10,
  10,
  5,
  5,
  -5,
  -10,
  0,
  0,
  -10,
  -5,
  5,
  0,
  0,
  0,
  20,
  20,
  0,
  0,
  0,
  5,
  5,
  10,
  25,
  25,
  10,
  5,
  5,
  10,
  10,
  20,
  30,
  30,
  20,
  10,
  10,
  50,
  50,
  50,
  50,
  50,
  50,
  50,
  50,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
];

const BLACK_PAWN_WEIGHTS: i32[] = [
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  -50,
  -50,
  -50,
  -50,
  -50,
  -50,
  -50,
  -50,
  -10,
  -10,
  -20,
  -30,
  -30,
  -20,
  -10,
  -10,
  -5,
  -5,
  -10,
  -25,
  -25,
  -10,
  -5,
  -5,
  0,
  0,
  0,
  -20,
  -20,
  0,
  0,
  0,
  -5,
  5,
  10,
  0,
  0,
  10,
  5,
  -5,
  -5,
  -10,
  -10,
  20,
  20,
  -10,
  -10,
  -5,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
];

const WHITE_KNIGHT_WEIGHTS: i32[] = [
  -50,
  -40,
  -30,
  -30,
  -30,
  -30,
  -40,
  -50,
  -40,
  -20,
  0,
  5,
  5,
  0,
  -20,
  -40,
  -30,
  5,
  10,
  15,
  15,
  10,
  5,
  -30,
  -30,
  0,
  15,
  20,
  20,
  15,
  0,
  -30,
  -30,
  5,
  15,
  20,
  20,
  15,
  5,
  -30,
  -30,
  0,
  10,
  15,
  15,
  10,
  0,
  -30,
  -40,
  -20,
  0,
  0,
  0,
  0,
  -20,
  -40,
  -50,
  -40,
  -30,
  -30,
  -30,
  -30,
  -40,
  -50,
];

const BLACK_KNIGHT_WEIGHTS: i32[] = [
  50,
  40,
  30,
  30,
  30,
  30,
  40,
  50,
  40,
  20,
  0,
  0,
  0,
  0,
  20,
  40,
  30,
  0,
  -10,
  -15,
  -15,
  -10,
  0,
  30,
  30,
  -5,
  -15,
  -20,
  -20,
  -15,
  -5,
  30,
  30,
  0,
  -15,
  -20,
  -20,
  -15,
  0,
  30,
  30,
  -5,
  -10,
  -15,
  -15,
  -10,
  -5,
  30,
  40,
  20,
  0,
  -5,
  -5,
  0,
  20,
  40,
  50,
  40,
  30,
  30,
  30,
  30,
  40,
  50,
];

const WHITE_BISHOP_WEIGHTS: i32[] = [
  -20,
  -10,
  -10,
  -10,
  -10,
  -10,
  -10,
  -20,
  -10,
  5,
  0,
  0,
  0,
  0,
  5,
  -10,
  -10,
  10,
  10,
  10,
  10,
  10,
  10,
  -10,
  -10,
  0,
  10,
  10,
  10,
  10,
  0,
  -10,
  -10,
  5,
  5,
  10,
  10,
  5,
  5,
  -10,
  -10,
  0,
  5,
  10,
  10,
  5,
  0,
  -10,
  -10,
  0,
  0,
  0,
  0,
  0,
  0,
  -10,
  -20,
  -10,
  -10,
  -10,
  -10,
  -10,
  -10,
  -20,
];

const BLACK_BISHOP_WEIGHTS: i32[] = [
  20,
  10,
  10,
  10,
  10,
  10,
  10,
  20,
  10,
  0,
  0,
  0,
  0,
  0,
  0,
  10,
  10,
  0,
  -5,
  -10,
  -10,
  -5,
  0,
  10,
  10,
  -5,
  -5,
  -10,
  -10,
  -5,
  -5,
  10,
  10,
  0,
  -10,
  -10,
  -10,
  -10,
  0,
  10,
  10,
  -10,
  -10,
  -10,
  -10,
  -10,
  -10,
  10,
  10,
  -5,
  0,
  0,
  0,
  0,
  -5,
  10,
  20,
  10,
  10,
  10,
  10,
  10,
  10,
  20,
];

const WHITE_ROOK_WEIGHTS: i32[] = [
  0,
  0,
  0,
  5,
  5,
  0,
  0,
  0,
  -5,
  0,
  0,
  0,
  0,
  0,
  0,
  -5,
  -5,
  0,
  0,
  0,
  0,
  0,
  0,
  -5,
  -5,
  0,
  0,
  0,
  0,
  0,
  0,
  -5,
  -5,
  0,
  0,
  0,
  0,
  0,
  0,
  -5,
  -5,
  0,
  0,
  0,
  0,
  0,
  0,
  -5,
  5,
  10,
  10,
  10,
  10,
  10,
  10,
  5,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
];

const BLACK_ROOK_WEIGHTS = [
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  -5,
  -10,
  -10,
  -10,
  -10,
  -10,
  -10,
  -5,
  5,
  0,
  0,
  0,
  0,
  0,
  0,
  5,
  5,
  0,
  0,
  0,
  0,
  0,
  0,
  5,
  5,
  0,
  0,
  0,
  0,
  0,
  0,
  5,
  5,
  0,
  0,
  0,
  0,
  0,
  0,
  5,
  5,
  0,
  0,
  0,
  0,
  0,
  0,
  5,
  0,
  0,
  0,
  -5,
  -5,
  0,
  0,
  0,
];

const WHITE_QUEEN_WEIGHTS: i32[] = [
  -20,
  -10,
  -10,
  -5,
  -5,
  -10,
  -10,
  -20,
  -10,
  0,
  0,
  0,
  0,
  5,
  0,
  -10,
  -10,
  0,
  5,
  5,
  5,
  5,
  5,
  -10,
  -5,
  0,
  5,
  5,
  5,
  5,
  0,
  0,
  -5,
  0,
  5,
  5,
  5,
  5,
  0,
  -5,
  -10,
  0,
  5,
  5,
  5,
  5,
  0,
  -10,
  -10,
  0,
  0,
  0,
  0,
  0,
  0,
  -10,
  -20,
  -10,
  -10,
  -5,
  -5,
  -10,
  -10,
  -20,
];

const BLACK_QUEEN_WEIGHTS: i32[] = [
  20,
  10,
  10,
  5,
  5,
  10,
  10,
  20,
  10,
  0,
  0,
  0,
  0,
  0,
  0,
  10,
  10,
  0,
  -5,
  -5,
  -5,
  -5,
  0,
  10,
  5,
  0,
  -5,
  -5,
  -5,
  -5,
  0,
  5,
  0,
  0,
  -5,
  -5,
  -5,
  -5,
  0,
  5,
  10,
  -5,
  -5,
  -5,
  -5,
  -5,
  0,
  10,
  10,
  0,
  -5,
  0,
  0,
  0,
  0,
  10,
  20,
  10,
  10,
  5,
  5,
  10,
  10,
  20,
];

const WHITE_KING_MIDDLE_GAME_WEIGHTS: i32[] = [
  20,
  30,
  10,
  0,
  0,
  10,
  30,
  20,
  20,
  20,
  0,
  0,
  0,
  0,
  20,
  20,
  -10,
  -20,
  -20,
  -20,
  -20,
  -20,
  -20,
  -10,
  -20,
  -30,
  -30,
  -40,
  -40,
  -30,
  -30,
  -20,
  -30,
  -40,
  -40,
  -50,
  -50,
  -40,
  -40,
  -30,
  -30,
  -40,
  -40,
  -50,
  -50,
  -40,
  -40,
  -30,
  -30,
  -40,
  -40,
  -50,
  -50,
  -40,
  -40,
  -30,
  -30,
  -40,
  -40,
  -50,
  -50,
  -40,
  -40,
  -30,
];

const BLACK_KING_MIDDLE_GAME_WEIGHTS: i32[] = [
  30,
  40,
  40,
  50,
  50,
  40,
  40,
  30,
  30,
  40,
  40,
  50,
  50,
  40,
  40,
  30,
  30,
  40,
  40,
  50,
  50,
  40,
  40,
  30,
  30,
  40,
  40,
  50,
  50,
  40,
  40,
  30,
  20,
  30,
  30,
  40,
  40,
  30,
  30,
  20,
  10,
  20,
  20,
  20,
  20,
  20,
  20,
  10,
  -20,
  -20,
  0,
  0,
  0,
  0,
  -20,
  -20,
  -20,
  -30,
  -10,
  0,
  0,
  -10,
  -30,
  -20,
];

const WHITE_KING_END_GAME_WEIGHTS: i32[] = [
  -50,
  -30,
  -30,
  -30,
  -30,
  -30,
  -30,
  -50,
  -30,
  -30,
  0,
  0,
  0,
  0,
  -30,
  -30,
  -30,
  -10,
  20,
  30,
  30,
  20,
  -10,
  -30,
  -30,
  -10,
  30,
  40,
  40,
  30,
  -10,
  -30,
  -30,
  -10,
  30,
  40,
  40,
  30,
  -10,
  -30,
  -30,
  -10,
  20,
  30,
  30,
  20,
  -10,
  -30,
  -30,
  -20,
  -10,
  0,
  0,
  -10,
  -20,
  -30,
  -50,
  -40,
  -30,
  -20,
  -20,
  -30,
  -40,
  -50,
];

const BLACK_KING_END_GAME_WEIGHTS: i32[] = [
  50,
  40,
  30,
  20,
  20,
  30,
  40,
  50,
  30,
  20,
  10,
  0,
  0,
  10,
  20,
  30,
  30,
  10,
  -20,
  -30,
  -30,
  -20,
  10,
  30,
  30,
  10,
  -30,
  -40,
  -40,
  -30,
  10,
  30,
  30,
  10,
  -30,
  -40,
  -40,
  -30,
  10,
  30,
  30,
  10,
  -20,
  -30,
  -30,
  -20,
  10,
  30,
  30,
  30,
  0,
  0,
  0,
  0,
  30,
  30,
  50,
  30,
  30,
  30,
  30,
  30,
  30,
  50,
];

const WEIGHTS_MIDDLE_GAME: i32[][] = [
  WHITE_PAWN_WEIGHTS,
  BLACK_PAWN_WEIGHTS,
  WHITE_KNIGHT_WEIGHTS,
  BLACK_KNIGHT_WEIGHTS,
  WHITE_BISHOP_WEIGHTS,
  BLACK_BISHOP_WEIGHTS,
  WHITE_ROOK_WEIGHTS,
  BLACK_ROOK_WEIGHTS,
  WHITE_QUEEN_WEIGHTS,
  BLACK_QUEEN_WEIGHTS,
  WHITE_KING_MIDDLE_GAME_WEIGHTS,
  BLACK_KING_MIDDLE_GAME_WEIGHTS,
];
const WEIGHTS_END_GAME: i32[][] = [
  WHITE_PAWN_WEIGHTS,
  BLACK_PAWN_WEIGHTS,
  WHITE_KNIGHT_WEIGHTS,
  BLACK_KNIGHT_WEIGHTS,
  WHITE_BISHOP_WEIGHTS,
  BLACK_BISHOP_WEIGHTS,
  WHITE_ROOK_WEIGHTS,
  BLACK_ROOK_WEIGHTS,
  WHITE_QUEEN_WEIGHTS,
  BLACK_QUEEN_WEIGHTS,
  WHITE_KING_END_GAME_WEIGHTS,
  BLACK_KING_END_GAME_WEIGHTS,
];

export const PIECE_VALUES: i32[] = [
  100,
  -100,
  320,
  -320,
  330,
  -330,
  500,
  -500,
  900,
  -900,
  20000,
  -20000,
];

for (let piece: i8 = 0; piece < PIECE_VALUES.length; piece++) {
  for (let position: i8 = 0; position < 64; position++) {
    WEIGHTS_MIDDLE_GAME[piece][position] += PIECE_VALUES[piece];
    WEIGHTS_END_GAME[piece][position] += PIECE_VALUES[piece];
  }
}

function isPastMiddleGame(board: BitBoard): boolean {
  const pieceCount = popcnt(board.getAllPiecesMask());
  return pieceCount < 20;
}

const positions = new MaskIterator();

export function evaluate(player: i8, board: BitBoard): i32 {
  const weights = isPastMiddleGame(board)
    ? WEIGHTS_END_GAME
    : WEIGHTS_MIDDLE_GAME;
  let result: i32 = 0;
  for (let piece = 0; piece < 12; piece++) {
    const pieceMask = unchecked(board.bits[piece]);
    positions.reset(pieceMask);
    while (positions.hasNext()) {
      const position = positions.next();
      result += unchecked(weights[piece][position]);
    }
  }
  if (player === BLACK) {
    result = -result;
  }
  return result;
}
